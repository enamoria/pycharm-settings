<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/.PyCharmCE2018.3/system/python_stubs/-26487350/pyworld/pyworld.py" timestamp="1547794623510">
        <mark key="'" line="193" column="54" />
        <mark key="[" line="12" column="20" />
      </file>
      <file name="$APPLICATION_HOME_DIR$/helpers/pydev/pydevd.py" timestamp="1545029067612">
        <mark key="[" line="1665" column="4" />
        <mark key="]" line="1663" column="0" />
        <mark key="^" line="1663" column="0" />
        <mark key="." line="1663" column="0" />
      </file>
      <file name="/Dummy.txt" timestamp="1548210848429">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/zz_linhtinhxamlon/zz_linhtinh.py" timestamp="1547437735001">
        <mark key="[" line="29" column="7" />
      </file>
      <file name="/Python Console" timestamp="1548229747112">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/mnt/705AD0235ACFE446/kinhph/workspace/pyGenLab/genlab/word_splitter_into_subword/splitter.py" timestamp="1548068736118">
        <mark key="p" line="94" column="29" />
        <mark key="'" line="208" column="35" />
        <mark key="[" line="189" column="26" />
        <mark key="]" line="189" column="26" />
        <mark key="^" line="229" column="3" />
        <mark key="." line="189" column="26" />
      </file>
      <file name="/fragment.py" timestamp="1548145692899">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="44" />
        <mark key="." line="0" column="44" />
      </file>
      <file name="$USER_HOME$/anaconda3/lib/python3.6/site-packages/PyMF-0.3-py3.6.egg!/pymf/nmf.py" timestamp="1548214115168">
        <mark key="'" line="170" column="0" />
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/utils.py" timestamp="1548145690237">
        <mark key="'" line="135" column="79" />
        <mark key="[" line="63" column="28" />
        <mark key="]" line="90" column="11" />
        <mark key="^" line="90" column="11" />
        <mark key="." line="90" column="11" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/04_align_n_nmf_pytorch.py" timestamp="1548229722201">
        <mark key="'" line="142" column="41" />
      </file>
      <file name="/a.dummy" timestamp="1548064937661">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/02_freq_warping_DFW.py" timestamp="1545017424838">
        <mark key="[" line="50" column="0" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/demo_graph.py" timestamp="1548144203039">
        <mark key="[" line="10" column="47" />
        <mark key="]" line="10" column="47" />
        <mark key="^" line="20" column="19" />
        <mark key="." line="10" column="47" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/zz_linhtinh.py" timestamp="1548229859350">
        <mark key="u" line="36" column="102" />
        <mark key="'" line="54" column="0" />
        <mark key="[" line="61" column="17" />
        <mark key="]" line="61" column="17" />
        <mark key="." line="61" column="17" />
        <mark key="^" line="64" column="3" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/04_align_n_qrmf.py" timestamp="1548130589149">
        <mark key="[" line="20" column="0" />
        <mark key="]" line="20" column="0" />
        <mark key="." line="20" column="0" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/data/vc/linhtinh.py" timestamp="1547786210360">
        <mark key="]" line="10" column="0" />
        <mark key="." line="10" column="0" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/04_align_n_nmf.py" timestamp="1548152294375">
        <mark key="'" line="283" column="33" />
        <mark key="[" line="206" column="143" />
        <mark key="]" line="206" column="143" />
        <mark key="." line="206" column="143" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/03_a_b_r_parallel.py" timestamp="1548035343477">
        <mark key="'" line="89" column="49" />
        <mark key="[" line="97" column="99" />
        <mark key="]" line="106" column="79" />
        <mark key="^" line="106" column="79" />
        <mark key="." line="106" column="79" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/config/config" timestamp="1548145659119">
        <mark key="'" line="40" column="1" />
        <mark key="[" line="11" column="15" />
        <mark key="]" line="11" column="16" />
        <mark key="." line="11" column="16" />
        <mark key="^" line="8" column="7" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/README.md" timestamp="1547774717165">
        <mark key="[" line="18" column="0" />
        <mark key="]" line="24" column="10" />
        <mark key="^" line="7" column="25" />
        <mark key="." line="24" column="10" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict_parallel.py" timestamp="1547892903613">
        <mark key="'" line="347" column="100" />
        <mark key="m" line="396" column="40" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/04_compensation.py" timestamp="1547547486865">
        <mark key="'" line="9" column="87" />
        <mark key="[" line="57" column="14" />
        <mark key="]" line="83" column="8" />
        <mark key="." line="83" column="8" />
        <mark key="^" line="83" column="8" />
      </file>
      <file name="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/nmf.py" timestamp="1548216530155">
        <mark key="'" line="100" column="65" />
        <mark key="[" line="70" column="92" />
        <mark key="]" line="155" column="0" />
        <mark key="^" line="45" column="17" />
        <mark key="." line="155" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="195" column="4" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="199" column="4" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="221" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="214" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="207" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="204" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="202" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="198" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="190" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="194" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="172" column="4" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="180" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="234" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="233" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="229" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="226" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="210" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="254" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="259" column="4" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="225" column="73" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="224" column="8" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="217" column="49" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="215" column="33" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="191" column="71" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="185" column="49" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="183" column="33" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="169" column="26" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="164" column="15" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="163" column="8" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="178" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="177" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="181" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="174" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="175" column="108" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="247" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="268" column="4" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="276" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="271" column="12" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="249" column="19" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="300" column="112" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="287" column="21" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="290" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="120" column="4" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/02_freq_warping_neural.py" />
      <jump line="132" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/02_freq_warping_neural.py" />
      <jump line="119" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/02_freq_warping_neural.py" />
      <jump line="124" column="9" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/02_freq_warping_neural.py" />
      <jump line="0" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/02_freq_warping_neural.py" />
      <jump line="90" column="4" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="0" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="337" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="191" column="54" filename="$USER_HOME$/.PyCharmCE2018.3/system/python_stubs/-26487350/pyworld/pyworld.py" />
      <jump line="46" column="31" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/demo_graph.py" />
      <jump line="49" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/demo_graph.py" />
      <jump line="53" column="48" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/demo_graph.py" />
      <jump line="328" column="4" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="51" column="14" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/03_a_b_r.py" />
      <jump line="26" column="21" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/03_a_b_r.py" />
      <jump line="99" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/03_a_b_r.py" />
      <jump line="0" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/03_a_b_r.py" />
      <jump line="308" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="87" column="20" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict.py" />
      <jump line="118" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/03_a_b_r.py" />
      <jump line="135" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict_parallel.py" />
      <jump line="313" column="4" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict_parallel.py" />
      <jump line="166" column="4" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict_parallel.py" />
      <jump line="129" column="79" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/utils.py" />
      <jump line="158" column="32" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict_parallel.py" />
      <jump line="150" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict_parallel.py" />
      <jump line="0" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/04_conversion.py" />
      <jump line="164" column="21" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/03_a_b_r_parallel.py" />
      <jump line="351" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict_parallel.py" />
      <jump line="32" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/04_compensation.py" />
      <jump line="28" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict_parallel.py" />
      <jump line="161" column="25" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/03_a_b_r_parallel.py" />
      <jump line="17" column="10" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/04_compensation.py" />
      <jump line="60" column="87" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/04_compensation.py" />
      <jump line="0" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/03_a_b_r_parallel.py" />
      <jump line="250" column="57" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict_parallel.py" />
      <jump line="0" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict_parallel.py" />
      <jump line="39" column="43" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/zz_linhtinh.py" />
      <jump line="204" column="26" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/04_align_n_nmf.py" />
      <jump line="43" column="1" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/config/config" />
      <jump line="82" column="14" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/zz_linhtinh.py" />
      <jump line="361" column="100" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/01_make_dict_parallel.py" />
      <jump line="162" column="85" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/03_a_b_r_parallel.py" />
      <jump line="84" column="49" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/03_a_b_r_parallel.py" />
      <jump line="273" column="33" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/04_align_n_nmf.py" />
      <jump line="143" column="35" filename="/mnt/705AD0235ACFE446/kinhph/workspace/pyGenLab/genlab/word_splitter_into_subword/splitter.py" />
      <jump line="90" column="65" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/nmf.py" />
      <jump line="248" column="12" filename="$USER_HOME$/anaconda3/lib/python3.6/site-packages/PyMF-0.3-py3.6.egg!/pymf/nmf.py" />
      <jump line="0" column="0" filename="$USER_HOME$/anaconda3/lib/python3.6/site-packages/PyMF-0.3-py3.6.egg!/pymf/nmf.py" />
      <jump line="313" column="10" filename="$USER_HOME$/anaconda3/lib/python3.6/site-packages/PyMF-0.3-py3.6.egg!/pymf/nmf.py" />
      <jump line="307" column="0" filename="$USER_HOME$/anaconda3/lib/python3.6/site-packages/PyMF-0.3-py3.6.egg!/pymf/nmf.py" />
      <jump line="304" column="0" filename="$USER_HOME$/anaconda3/lib/python3.6/site-packages/PyMF-0.3-py3.6.egg!/pymf/nmf.py" />
      <jump line="293" column="0" filename="$USER_HOME$/anaconda3/lib/python3.6/site-packages/PyMF-0.3-py3.6.egg!/pymf/nmf.py" />
      <jump line="247" column="0" filename="$USER_HOME$/anaconda3/lib/python3.6/site-packages/PyMF-0.3-py3.6.egg!/pymf/nmf.py" />
      <jump line="244" column="0" filename="$USER_HOME$/anaconda3/lib/python3.6/site-packages/PyMF-0.3-py3.6.egg!/pymf/nmf.py" />
      <jump line="170" column="0" filename="$USER_HOME$/anaconda3/lib/python3.6/site-packages/PyMF-0.3-py3.6.egg!/pymf/nmf.py" />
      <jump line="54" column="0" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/zz_linhtinh.py" />
      <jump line="142" column="41" filename="/mnt/705AD0235ACFE446/Dropbox/linhtinhproject/exemplar_vc/04_align_n_nmf_pytorch.py" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text>np.random.rand(5, 15))</text>
      </register>
      <register name="-" type="4">
        <text>np.random.rand(5, 15))</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDxTUFw+</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAgICAgIyBjb252X3N0ZnQgPSB0b2JlX2NvbnZlcnRlZFsnc3RmdCddCg==</text>
      </register>
      <register name="1" type="4">
        <text>nmf = NMF(data, num_bases=W.shape[1])
nmf._init_h()

nmf.W = W
nmf.factorize(niter=20000, compute_w=False, show_progress=True)
print(nmf.W)
print(nmf.H)
print(np.matmul(nmf.W, nmf.H))
print(np.matmul(nmf.W, nmf.H) - data)
# pdb.set_trace()</text>
      </register>
      <register name="q" type="4">
        <text />
      </register>
      <register name="2" type="4">
        <text># def factorize(X, W, beta_loss=&quot;kullback-leibler&quot;):
#     &quot;&quot;&quot;
#         Calculate matrix `H`, which `W x H ~ X`
#         Note: In this function, `sklearn.decomposition's` non_negative_factorization is used. This function's implementation only
#                 allow we to feed in a fixed H, not W. So we need to used a trick here to feed in a fixed W (we need to fix W, it's our exemplar dictionary).
#                 Instead of calling `non_negative_factorization(X=X, H=H)` directly, we feed in `X.T as X, W.T as H. Notice that:
#                         X.T = H.T x W.T
#                     So we transpose H and W to swap their roles. Remember to swap the result back
#
#     :param X: original matrix, which we need to decompose
#     :param W: We have precomputed W.
#     :return: H: W ~ W x H
#     &quot;&quot;&quot;
#     _W, _H, n_iter = non_negative_factorization(X=X.T, H=W.T, init=&quot;custom&quot;, update_H=False, n_components=W.T.shape[0],
#                                                 beta_loss=beta_loss, solver='mu')
#
#     return _W.T
#
#
# X = np.asarray([[1, 2, 3, 4], [1, 3, 4, 5], [5, 7, 3, 1]], dtype=np.double)
# W_org = np.asarray([[4, 5], [3, 1], [1, 9]], dtype=np.double)
#
#
# H = factorize(X, W=W_org)
# print(np.matmul(W_org, H))
# print(X)

# W = _H.T
# H = _W.T
# print(W)
# print(&quot;==&quot;)
# print(H)
# print(&quot;==&quot;)
# print(np.matmul(W, H))
# print(x)
# print(n_iter)

# model = NMF(n_components=y.shape[1], init=&quot;custom&quot;, max_iter=10000)

# for frame in src_for_conversion['sp']:
# Each frame have size of (1, 513). Need to transpose:
#       frame.T = exemplar_A[:]['sp'] x h (h is activation matrix)

# output = model.fit_transform(src_for_conversion['sp'][0].T[:, np.newaxis], W=_W.T)
# output = model.fit_transform(X=x, W=y)
# print(output)
# print(output.shape)
#
# print(model.components_)
# print(model.components_.shape)
# pdb.set_trace()
import librosa as lbr
import pyworld as pw

from tqdm import tqdm
# import decomp

use_stft = True
speakerA = &quot;SF1&quot;
speakerB = &quot;TM3&quot;


def io_load_from_pickle():
    with open(&quot;./data/vc/exem_dict/exemplar_W_A&quot;, &quot;rb&quot;) as f:
        src_W = pickle.load(f)

    with open(&quot;./data/vc/exem_dict/exemplar_W_B&quot;, &quot;rb&quot;) as f:
        tar_W = pickle.load(f)

    if not use_stft:
        with open(&quot;./data/vc/exem_dict/{}_feat_sp_ap_f0.pkl&quot;.format(speakerA), &quot;rb&quot;) as f:
            src_feat = pickle.load(f)

        with open(&quot;./data/vc/exem_dict/{}_feat_sp_ap_f0.pkl&quot;.format(speakerB), &quot;rb&quot;) as f:
            tar_feat = pickle.load(f)
    else:
        with open(&quot;./data/vc/exem_dict/{}_feat_stft.pkl&quot;.format(speakerA), &quot;rb&quot;) as f:
            src_feat = pickle.load(f)

        with open(&quot;./data/vc/exem_dict/{}_feat_stft.pkl&quot;.format(speakerB), &quot;rb&quot;) as f:
            tar_feat = pickle.load(f)

    return src_feat, tar_feat, src_W, tar_W
def align_sp_ap_f0(feat=None, dtw_path=None):
    &quot;&quot;&quot;
        Align spectral feature, based on dtw_path. Check if an available pickled version is existed
    :param feat: spectral features
    :param dtw_path: dtw_path of the audio
    :return: `feat`-like object, but aligned
    &quot;&quot;&quot;
    src_feat, tar_feat, src_W, tar_W = io_load_from_pickle()

    aligned_src_feat = []
    aligned_tar_feat = []

    if not use_stft:
        for i in tqdm(range(len(src_W))):  # iterate through each audio file
            sp1 = []; ap1 = []; f01 = []
            sp2 = []; ap2 = []; f02 = []

            for j in range(len(src_W[i])):
                sp1.append(src_feat[i]['sp'][src_W[i][j]])
                ap1.append(src_feat[i]['ap'][src_W[i][j]])
                f01.append(src_feat[i]['f0'][src_W[i][j]])

                sp2.append(tar_feat[i]['sp'][tar_W[i][j]])
                ap2.append(tar_feat[i]['ap'][tar_W[i][j]])
                f02.append(tar_feat[i]['f0'][tar_W[i][j]])

            aligned_src_feat.append({
                'sp': np.asarray(sp1),
                'ap': np.asarray(ap1),
                'f0': np.asarray(f01),
                'fs': src_feat[i]['fs']
            })

            aligned_tar_feat.append({
                'sp': np.asarray(sp2),
                'ap': np.asarray(ap2),
                'f0': np.asarray(f02),
                'fs': tar_feat[i]['fs']
            })

        return aligned_src_feat, aligned_tar_feat
    else:
        for i in tqdm(range(len(src_W))):  # iterate through each audio file
            stft1 = []; real1 = []; imag1 = []
            stft2 = []; real2 = []; imag2 = []

            for j in range(len(src_W[i])):
                stft1.append(src_feat[i]['stft'][src_W[i][j]])
                real1.append(src_feat[i]['stft'][src_W[i][j]].real)
                imag1.append(src_feat[i]['stft'][src_W[i][j]].imag)

                stft2.append(tar_feat[i]['stft'][tar_W[i][j]])
                real2.append(tar_feat[i]['stft'][src_W[i][j]].real)
                imag2.append(tar_feat[i]['stft'][src_W[i][j]].imag)

            aligned_src_feat.append({
                'stft': np.asarray(stft1),
                'real': np.asarray(real1),
                'imag': np.asarray(imag1),
                'fs': src_feat[i]['fs']
            })

            aligned_tar_feat.append({
                'stft': np.asarray(stft2),
                'real': np.asarray(real2),
                'imag': np.asarray(imag2),
                'fs': tar_feat[i]['fs']
            })

        return aligned_src_feat, aligned_tar_feat


# x, fs = lbr.load(&quot;data/SF1/100001.wav&quot;, sr=None, dtype=np.double)
# x_stft = lbr.core.stft(y=x)
src_feat, tar_feat, src_W, tar_W = io_load_from_pickle()

aligned_src_feat, aligned_tar_feat = align_sp_ap_f0()
aligned_src_feat = aligned_src_feat[0]['stft']
aligned_tar_feat = aligned_tar_feat[0]['stft']

print(aligned_src_feat.shape, aligned_tar_feat.shape)

# mix_stft = np.zeros(aligned_src_feat.shape, dtype=np.complex64)
# for i in range(len(aligned_src_feat)):
#     for j in range(len(aligned_src_feat[0])):
#         # mix_stft[i][j].real, mix_stft[i][j].imag = aligned_tar_feat[i][j].real, aligned_src_feat[i][j].imag
#         mix_stft[i][j] = aligned_tar_feat[i][j].real + aligned_tar_feat[i][j].imag * 1j

y = lbr.core.istft(aligned_tar_feat.T, hop_length=80)
lbr.output.write_wav(&quot;wav/linhtinh.wav&quot;, y, sr=16000)

y1 = lbr.core.istft(tar_feat[0]['stft'].T, hop_length=80)
lbr.output.write_wav(&quot;wav/linhtinh1.wav&quot;, y1, sr=16000)
# pdb.set_trace()
# _f0, t = pw.dio(x, fs)    # raw pitch extractor
# f0 = pw.stonemask(x, _f0, t, fs)  # pitch refinement
# sp = pw.cheaptrick(x, f0, t, fs)  # extract smoothed spectrogram
# ap = pw.d4c(x, f0, t, fs)         # extract aperiodicity
# y = pw.synthesize(f0, sp, ap, fs)
#
# lbr.output.write_wav(&quot;wav/zz_test.wav&quot;, y, sr=fs, norm=True)</text>
      </register>
      <register name="r" type="4">
        <text>None</text>
      </register>
      <register name="3" type="4">
        <text encoding="base64">ZGVmIG5tZihWLCBXaW5pdCwgSGluaXQsIHRvbCwgdGltZWxpbWl0LCBtYXhpdGVyKToKICAgICIiIgogICAgKFcsSCkgPSBubWYoVixXaW5pdCxIaW5pdCx0b2wsdGltZWxpbWl0LG1heGl0ZXIpCiAgICBXLEg6IG91dHB1dCBzb2x1dGlvbgogICAgV2luaXQsSGluaXQ6IGluaXRpYWwgc29sdXRpb24KICAgIHRvbDogdG9sZXJhbmNlIGZvciBhIHJlbGF0aXZlIHN0b3BwaW5nIGNvbmRpdGlvbgogICAgdGltZWxpbWl0LCBtYXhpdGVyOiBsaW1pdCBvZiB0aW1lIGFuZCBpdGVyYXRpb25zCiAgICAiIiIKCiAgICBXID0gV2luaXQ7CiAgICBIID0gSGluaXQ7CiAgICBpbml0dCA9IHRpbWUoKTsKCiAgICBncmFkVyA9IGRvdChXLCBkb3QoSCwgSC5UKSkgLSBkb3QoViwgSC5UKQogICAgZ3JhZEggPSBkb3QoZG90KFcuVCwgVyksIEgpIC0gZG90KFcuVCwgVikKICAgIGluaXRncmFkID0gbm9ybShyX1tncmFkVywgZ3JhZEguVF0pCiAgICBwcmludCgnSW5pdCBncmFkaWVudCBub3JtICVmJyAlIGluaXRncmFkKQogICAgdG9sVyA9IG1heCgwLjAwMSwgdG9sKSAqIGluaXRncmFkCiAgICB0b2xIID0gdG9sVwoKICAgIGZvciBpdGVyIGluIHhyYW5nZSgxLCBtYXhpdGVyKToKICAgICAgICAjIHN0b3BwaW5nIGNvbmRpdGlvbgogICAgICAgIHByb2pub3JtID0gbm9ybShyX1tncmFkV1tsb2dpY2FsX29yKGdyYWRXIDwgMCwgVyA+IDApXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgZ3JhZEhbbG9naWNhbF9vcihncmFkSCA8IDAsIEggPiAwKV1dKQogICAgICAgIGlmIHByb2pub3JtIDwgdG9sICogaW5pdGdyYWQgb3IgdGltZSgpIC0gaW5pdHQgPiB0aW1lbGltaXQ6IGJyZWFrCgogICAgICAgIChXLCBncmFkVywgaXRlclcpID0gbmxzc3VicHJvYihWLlQsIEguVCwgVy5ULCB0b2xXLCAxMDAwKQogICAgICAgIFcgPSBXLlQKICAgICAgICBncmFkVyA9IGdyYWRXLlQKCiAgICAgICAgaWYgaXRlclcgPT0gMTogdG9sVyA9IDAuMSAqIHRvbFcKCiAgICAgICAgKEgsIGdyYWRILCBpdGVySCkgPSBubHNzdWJwcm9iKFYsIFcsIEgsIHRvbEgsIDEwMDApCiAgICAgICAgaWYgaXRlckggPT0gMTogdG9sSCA9IDAuMSAqIHRvbEgKCiAgICAgICAgaWYgaXRlciAlIDEwID09IDA6IHN0ZG91dC53cml0ZSgnLicpCgogICAgICAgIHByaW50KCdcbkl0ZXIgPSAlZCBGaW5hbCBwcm9qLWdyYWQgbm9ybSAlZicgJSAoaXRlciwgcHJvam5vcm0pKQogICAgICAgIAogICAgcmV0dXJuIChXLCBIKQoKCmRlZiBubHNzdWJwcm9iKFYsIFcsIEhpbml0LCB0b2wsIG1heGl0ZXIpOgogICAgIiIiCiAgICBILCBncmFkOiBvdXRwdXQgc29sdXRpb24gYW5kIGdyYWRpZW50CiAgICBpdGVyOiAjaXRlcmF0aW9ucyB1c2VkCiAgICBWLCBXOiBjb25zdGFudCBtYXRyaWNlcwogICAgSGluaXQ6IGluaXRpYWwgc29sdXRpb24KICAgIHRvbDogc3RvcHBpbmcgdG9sZXJhbmNlCiAgICBtYXhpdGVyOiBsaW1pdCBvZiBpdGVyYXRpb25zCiAgICAiIiIKCiAgICBIID0gSGluaXQKICAgIFd0ViA9IGRvdChXLlQsIFYpCiAgICBXdFcgPSBkb3QoVy5ULCBXKQoKICAgIGFscGhhID0gMTsKICAgIGJldGEgPSAwLjE7CiAgICBmb3IgaXRlciBpbiB4cmFuZ2UoMSwgbWF4aXRlcik6CiAgICAgICAgZ3JhZCA9IGRvdChXdFcsIEgpIC0gV3RWCiAgICAgICAgcHJvamdyYWQgPSBub3JtKGdyYWRbbG9naWNhbF9vcihncmFkIDwgMCwgSCA+IDApXSkKICAgICAgICBpZiBwcm9qZ3JhZCA8IHRvbDogYnJlYWsKCiAgICAgICAgIyBzZWFyY2ggc3RlcCBzaXplIAogICAgICAgIGZvciBpbm5lcl9pdGVyIGluIHhyYW5nZSgxLCAyMCk6CiAgICAgICAgICAgIEhuID0gSCAtIGFscGhhICogZ3JhZAogICAgICAgICAgICBIbiA9IHdoZXJlKEhuID4gMCwgSG4sIDApCiAgICAgICAgICAgIGQgPSBIbiAtIEgKICAgICAgICAgICAgZ3JhZGQgPSBzdW0oZ3JhZCAqIGQpCiAgICAgICAgICAgIGRRZCA9IHN1bShkb3QoV3RXLCBkKSAqIGQpCiAgICAgICAgICAgIHN1ZmZfZGVjciA9IDAuOTkgKiBncmFkZCArIDAuNSAqIGRRZCA8IDA7CiAgICAgICAgICAgIGlmIGlubmVyX2l0ZXIgPT0gMToKICAgICAgICAgICAgICAgIGRlY3JfYWxwaGEgPSBub3Qgc3VmZl9kZWNyOwogICAgICAgICAgICAgICAgSHAgPSBIOwogICAgICAgICAgICBpZiBkZWNyX2FscGhhOgogICAgICAgICAgICAgICAgaWYgc3VmZl9kZWNyOgogICAgICAgICAgICAgICAgICAgIEggPSBIbjsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgYWxwaGEgPSBhbHBoYSAqIGJldGE7CiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBpZiBub3Qgc3VmZl9kZWNyIG9yIChIcCA9PSBIbikuYWxsKCk6CiAgICAgICAgICAgICAgICAgICAgSCA9IEhwOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBhbHBoYSA9IGFscGhhIC8gYmV0YTsKICAgICAgICAgICAgICAgICAgICBIcCA9IEhuOwoKICAgICAgICBpZiBpdGVyID09IG1heGl0ZXI6CiAgICAgICAgICAgIHByaW50KCdNYXggaXRlciBpbiBubHNzdWJwcm9iJykKICAgIHJldHVybiAoSCwgZ3JhZCwgaXRlcik=</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">aW1wb3J0IG9zCmltcG9ydCBzeXMKaW1wb3J0IHBkYgppbXBvcnQgcGlja2xlCmltcG9ydCBzYyAKaW1wb3J0IHRpbWUKaW1wb3J0IGxvZ2dpbmcKaW1wb3J0IGRhdGV0aW1lCg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBwcmludF9mdW5jdGlvbgpmcm9tIGR0dyBpbXBvcnQgZHR3CmZyb20gdHFkbSBpbXBvcnQgdHFkbQpmcm9tIHNrbGVhcm4uZGVjb21wb3NpdGlvbiBpbXBvcnQgTk1GLCBub25fbmVnYXRpdmVfZmFjdG9yaXphdGlvbgppbXBvcnQgcwpmcm9tIHV0aWxzIGltcG9ydCBjb25maWdfZ2V0X2NvbmZpZwo=</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBwcmludF9mdW5jdGlvbgpmcm9tIGR0dyBpbXBvcnQgZHR3CmZyb20gdHFkbSBpbXBvcnQgdHFkbQpmcm9tIHNrbGVhcm4uZGVjb21wb3NpdGlvbiBpbXBvcnQgTk1GLCBub25fbmVnYXRpdmVfZmFjdG9yaXphdGlvbgpmcm9tIHMKZnJvbSB1dGlscyBpbXBvcnQgY29uZmlnX2dldF9jb25maWcK</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICAgICAgIyBjb252X3N0ZnQgPSB0b2JlX2NvbnZlcnRlZFsnc3RmdCddCg==</text>
      </register>
      <register name="8" type="4">
        <text encoding="base64">ICAgIAp3aXRoIG9wZW4oImRhdGEvdmMvZXhlbV9kaWN0L1NGMV9mZWF0X3N0ZnQucGtsIiwgInJiIikgYXMgZjoKICAgIHNyY19mZWF0ID0gcGlja2xlLmxvYWQoZilbMF1bJ3N0ZnQnXQoKd2l0aCBvcGVuKCJkYXRhL3ZjL2V4ZW1fZGljdC9UTTNfZmVhdF9zdGZ0LnBrbCIsICJyYiIpIGFzIGY6CiAgICB0YXJfZmVhdCA9IHBpY2tsZS5sb2FkKGYpWzBdWydzdGZ0J10=</text>
      </register>
      <register name="9" type="4">
        <text encoding="base64">CiAgICB0ZXh0ID0gImVtY2Ftb24iCiAgICB3b3JkLCBuZXh0X3dvcmRfcG9zID0gY2hlY2tfd29yZCgiZW1jIiwgdGV4dCwgMCkKICAgIHByaW50KHdvcmQpCiAgICB3b3JkLCBuZXh0X3dvcmRfcG9zID0gY2hlY2tfd29yZCgiZW1jIiwgdGV4dCwgMCk=</text>
      </register>
      <register name=":" type="4">
        <text>action EditorLineStart</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDxTUFw+</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDxTUFw+</last-pattern>
      <last-dir>-1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>make_dict_from_feat</entry>
        <entry>0</entry>
        <entry encoding="base64">XDxzeXN0ZW1cPg==</entry>
        <entry>system</entry>
        <entry encoding="base64">XDxmcm9tXD4=</entry>
        <entry encoding="base64">XDxTUFw+</entry>
      </history-search>
      <history-cmd>
        <entry>action EditorDeleteLine</entry>
        <entry>action Vcs.QuickListPopupAction</entry>
        <entry>action EditorPageUpWithSelection</entry>
        <entry>action Find</entry>
        <entry>action MethodDown</entry>
        <entry>action MethodUp</entry>
        <entry>action EditorLineEnd</entry>
        <entry>action ImplementMethods</entry>
        <entry>action Replace</entry>
        <entry>action EditorUp</entry>
        <entry>action EditorDown</entry>
        <entry>action EditorPageDownWithSelection</entry>
        <entry>action EditorPageUp</entry>
        <entry>action EditorDownWithSelection</entry>
        <entry>action EditorCodeBlockEnd</entry>
        <entry>action EditorUpWithSelection</entry>
        <entry>action EditorLeftWithSelection</entry>
        <entry>action EditorPageDown</entry>
        <entry>action EditorRightWithSelection</entry>
        <entry>action EditorLineStart</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>